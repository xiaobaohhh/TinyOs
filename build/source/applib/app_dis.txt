In archive E:/ubuntu/diy-x86os/start/start/build/source/applib/libapp.a:

crt0.S.obj:     file format elf32-i386
rw-rw-rw- 0/0   1308 Jul 01 11:50 2025 crt0.S.obj
architecture: i386, flags 0x00000011:
HAS_RELOC, HAS_SYMS
start address 0x00000000

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000010  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000044  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000044  2**0
                  ALLOC
  3 .debug_line   00000067  00000000  00000000  00000044  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
  4 .debug_info   00000081  00000000  00000000  000000ab  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
  5 .debug_abbrev 00000014  00000000  00000000  0000012c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_aranges 00000020  00000000  00000000  00000140  2**3
                  CONTENTS, RELOC, READONLY, DEBUGGING
SYMBOL TABLE:
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 g       .text	00000000 _start
00000000         *UND*	00000000 cstart



Disassembly of section .text:

00000000 <_start>:
   0:	66 8c d0             	mov    %ss,%ax
   3:	8e d8                	mov    %eax,%ds
   5:	8e c0                	mov    %eax,%es
   7:	8e e0                	mov    %eax,%fs
   9:	8e e8                	mov    %eax,%gs
   b:	e9 fc ff ff ff       	jmp    c <_start+0xc>
			c: R_386_PC32	cstart

cstart.c.obj:     file format elf32-i386
rw-rw-rw- 0/0   7452 Jul 04 18:05 2025 cstart.c.obj
architecture: i386, flags 0x00000011:
HAS_RELOC, HAS_SYMS
start address 0x00000000

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000003c  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000070  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000070  2**0
                  ALLOC
  3 .debug_info   00000950  00000000  00000000  00000070  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
  4 .debug_abbrev 000001cc  00000000  00000000  000009c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000020  00000000  00000000  00000b8c  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
  6 .debug_line   000001cc  00000000  00000000  00000bac  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
  7 .debug_str    000005bc  00000000  00000000  00000d78  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .comment      00000012  00000000  00000000  00001334  2**0
                  CONTENTS, READONLY
  9 .debug_frame  0000002c  00000000  00000000  00001348  2**2
                  CONTENTS, RELOC, READONLY, DEBUGGING
SYMBOL TABLE:
00000000 l    df *ABS*	00000000 cstart.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	0000003c cstart
00000000         *UND*	00000000 __bss_start__
00000000         *UND*	00000000 __bss_end__
00000000         *UND*	00000000 main
00000000         *UND*	00000000 exit



Disassembly of section .text:

00000000 <cstart>:
   0:	55                   	push   %ebp
   1:	89 e5                	mov    %esp,%ebp
   3:	83 ec 18             	sub    $0x18,%esp
   6:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
			9: R_386_32	__bss_start__
   d:	eb 0a                	jmp    19 <cstart+0x19>
   f:	8b 45 f4             	mov    -0xc(%ebp),%eax
  12:	c6 00 00             	movb   $0x0,(%eax)
  15:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
  19:	81 7d f4 00 00 00 00 	cmpl   $0x0,-0xc(%ebp)
			1c: R_386_32	__bss_end__
  20:	72 ed                	jb     f <cstart+0xf>
  22:	83 ec 08             	sub    $0x8,%esp
  25:	ff 75 0c             	pushl  0xc(%ebp)
  28:	ff 75 08             	pushl  0x8(%ebp)
  2b:	e8 fc ff ff ff       	call   2c <cstart+0x2c>
			2c: R_386_PC32	main
  30:	83 c4 10             	add    $0x10,%esp
  33:	83 ec 0c             	sub    $0xc,%esp
  36:	50                   	push   %eax
  37:	e8 fc ff ff ff       	call   38 <cstart+0x38>
			38: R_386_PC32	exit

lib_syscall.c.obj:     file format elf32-i386
rw-rw-rw- 0/0  14056 Jul 04 18:05 2025 lib_syscall.c.obj
architecture: i386, flags 0x00000011:
HAS_RELOC, HAS_SYMS
start address 0x00000000

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000003eb  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  1 .data         00000000  00000000  00000000  0000041f  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  0000041f  2**0
                  ALLOC
  3 .debug_info   0000115b  00000000  00000000  0000041f  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
  4 .debug_abbrev 00000287  00000000  00000000  0000157a  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000020  00000000  00000000  00001801  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
  6 .debug_line   000002d6  00000000  00000000  00001821  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
  7 .debug_str    000007f0  00000000  00000000  00001af7  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .comment      00000012  00000000  00000000  000022e7  2**0
                  CONTENTS, READONLY
  9 .debug_frame  00000300  00000000  00000000  000022fc  2**2
                  CONTENTS, RELOC, READONLY, DEBUGGING
SYMBOL TABLE:
00000000 l    df *ABS*	00000000 lib_syscall.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	0000004c sys_call
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .comment	00000000 .comment
0000004c g     F .text	0000002a msleep
00000076 g     F .text	0000001b getpid
00000091 g     F .text	00000028 print_msg
000000b9 g     F .text	0000001b fork
000000d4 g     F .text	0000002d execve
00000101 g     F .text	0000001b yield
0000011c g     F .text	00000027 open
00000143 g     F .text	0000002d read
00000170 g     F .text	0000002d write
0000019d g     F .text	00000021 close
000001be g     F .text	0000002d lseek
000001eb g     F .text	00000021 isatty
0000020c g     F .text	00000027 fstat
00000233 g     F .text	00000021 sbrk
00000254 g     F .text	00000021 dup
00000275 g     F .text	00000022 _exit
00000297 g     F .text	00000021 wait
000002b8 g     F .text	0000006b opendir
00000000         *UND*	00000000 malloc
00000000         *UND*	00000000 free
00000323 g     F .text	00000040 readdir
00000363 g     F .text	00000034 closedir
00000397 g     F .text	00000033 ioctl
000003ca g     F .text	00000021 unlink



Disassembly of section .text:

00000000 <sys_call>:
   0:	55                   	push   %ebp
   1:	89 e5                	mov    %esp,%ebp
   3:	57                   	push   %edi
   4:	56                   	push   %esi
   5:	53                   	push   %ebx
   6:	83 ec 10             	sub    $0x10,%esp
   9:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
  10:	c7 45 ec 28 00 00 00 	movl   $0x28,-0x14(%ebp)
  17:	8b 45 08             	mov    0x8(%ebp),%eax
  1a:	8b 40 10             	mov    0x10(%eax),%eax
  1d:	8b 55 08             	mov    0x8(%ebp),%edx
  20:	8b 52 0c             	mov    0xc(%edx),%edx
  23:	8b 4d 08             	mov    0x8(%ebp),%ecx
  26:	8b 49 08             	mov    0x8(%ecx),%ecx
  29:	8b 5d 08             	mov    0x8(%ebp),%ebx
  2c:	8b 5b 04             	mov    0x4(%ebx),%ebx
  2f:	8b 75 08             	mov    0x8(%ebp),%esi
  32:	8b 36                	mov    (%esi),%esi
  34:	8d 7d e8             	lea    -0x18(%ebp),%edi
  37:	50                   	push   %eax
  38:	52                   	push   %edx
  39:	51                   	push   %ecx
  3a:	53                   	push   %ebx
  3b:	56                   	push   %esi
  3c:	ff 1f                	lcall  *(%edi)
  3e:	89 45 f0             	mov    %eax,-0x10(%ebp)
  41:	8b 45 f0             	mov    -0x10(%ebp),%eax
  44:	83 c4 10             	add    $0x10,%esp
  47:	5b                   	pop    %ebx
  48:	5e                   	pop    %esi
  49:	5f                   	pop    %edi
  4a:	5d                   	pop    %ebp
  4b:	c3                   	ret    

0000004c <msleep>:
  4c:	55                   	push   %ebp
  4d:	89 e5                	mov    %esp,%ebp
  4f:	83 ec 20             	sub    $0x20,%esp
  52:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
  56:	7e 1b                	jle    73 <msleep+0x27>
  58:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
  5f:	8b 45 08             	mov    0x8(%ebp),%eax
  62:	89 45 f0             	mov    %eax,-0x10(%ebp)
  65:	8d 45 ec             	lea    -0x14(%ebp),%eax
  68:	50                   	push   %eax
  69:	e8 92 ff ff ff       	call   0 <sys_call>
  6e:	83 c4 04             	add    $0x4,%esp
  71:	eb 01                	jmp    74 <msleep+0x28>
  73:	90                   	nop
  74:	c9                   	leave  
  75:	c3                   	ret    

00000076 <getpid>:
  76:	55                   	push   %ebp
  77:	89 e5                	mov    %esp,%ebp
  79:	83 ec 20             	sub    $0x20,%esp
  7c:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%ebp)
  83:	8d 45 ec             	lea    -0x14(%ebp),%eax
  86:	50                   	push   %eax
  87:	e8 74 ff ff ff       	call   0 <sys_call>
  8c:	83 c4 04             	add    $0x4,%esp
  8f:	c9                   	leave  
  90:	c3                   	ret    

00000091 <print_msg>:
  91:	55                   	push   %ebp
  92:	89 e5                	mov    %esp,%ebp
  94:	83 ec 20             	sub    $0x20,%esp
  97:	c7 45 ec 64 00 00 00 	movl   $0x64,-0x14(%ebp)
  9e:	8b 45 08             	mov    0x8(%ebp),%eax
  a1:	89 45 f0             	mov    %eax,-0x10(%ebp)
  a4:	8b 45 0c             	mov    0xc(%ebp),%eax
  a7:	89 45 f4             	mov    %eax,-0xc(%ebp)
  aa:	8d 45 ec             	lea    -0x14(%ebp),%eax
  ad:	50                   	push   %eax
  ae:	e8 4d ff ff ff       	call   0 <sys_call>
  b3:	83 c4 04             	add    $0x4,%esp
  b6:	90                   	nop
  b7:	c9                   	leave  
  b8:	c3                   	ret    

000000b9 <fork>:
  b9:	55                   	push   %ebp
  ba:	89 e5                	mov    %esp,%ebp
  bc:	83 ec 20             	sub    $0x20,%esp
  bf:	c7 45 ec 02 00 00 00 	movl   $0x2,-0x14(%ebp)
  c6:	8d 45 ec             	lea    -0x14(%ebp),%eax
  c9:	50                   	push   %eax
  ca:	e8 31 ff ff ff       	call   0 <sys_call>
  cf:	83 c4 04             	add    $0x4,%esp
  d2:	c9                   	leave  
  d3:	c3                   	ret    

000000d4 <execve>:
  d4:	55                   	push   %ebp
  d5:	89 e5                	mov    %esp,%ebp
  d7:	83 ec 20             	sub    $0x20,%esp
  da:	c7 45 ec 03 00 00 00 	movl   $0x3,-0x14(%ebp)
  e1:	8b 45 08             	mov    0x8(%ebp),%eax
  e4:	89 45 f0             	mov    %eax,-0x10(%ebp)
  e7:	8b 45 0c             	mov    0xc(%ebp),%eax
  ea:	89 45 f4             	mov    %eax,-0xc(%ebp)
  ed:	8b 45 10             	mov    0x10(%ebp),%eax
  f0:	89 45 f8             	mov    %eax,-0x8(%ebp)
  f3:	8d 45 ec             	lea    -0x14(%ebp),%eax
  f6:	50                   	push   %eax
  f7:	e8 04 ff ff ff       	call   0 <sys_call>
  fc:	83 c4 04             	add    $0x4,%esp
  ff:	c9                   	leave  
 100:	c3                   	ret    

00000101 <yield>:
 101:	55                   	push   %ebp
 102:	89 e5                	mov    %esp,%ebp
 104:	83 ec 20             	sub    $0x20,%esp
 107:	c7 45 ec 04 00 00 00 	movl   $0x4,-0x14(%ebp)
 10e:	8d 45 ec             	lea    -0x14(%ebp),%eax
 111:	50                   	push   %eax
 112:	e8 e9 fe ff ff       	call   0 <sys_call>
 117:	83 c4 04             	add    $0x4,%esp
 11a:	c9                   	leave  
 11b:	c3                   	ret    

0000011c <open>:
 11c:	55                   	push   %ebp
 11d:	89 e5                	mov    %esp,%ebp
 11f:	83 ec 20             	sub    $0x20,%esp
 122:	c7 45 ec 32 00 00 00 	movl   $0x32,-0x14(%ebp)
 129:	8b 45 08             	mov    0x8(%ebp),%eax
 12c:	89 45 f0             	mov    %eax,-0x10(%ebp)
 12f:	8b 45 0c             	mov    0xc(%ebp),%eax
 132:	89 45 f4             	mov    %eax,-0xc(%ebp)
 135:	8d 45 ec             	lea    -0x14(%ebp),%eax
 138:	50                   	push   %eax
 139:	e8 c2 fe ff ff       	call   0 <sys_call>
 13e:	83 c4 04             	add    $0x4,%esp
 141:	c9                   	leave  
 142:	c3                   	ret    

00000143 <read>:
 143:	55                   	push   %ebp
 144:	89 e5                	mov    %esp,%ebp
 146:	83 ec 20             	sub    $0x20,%esp
 149:	c7 45 ec 33 00 00 00 	movl   $0x33,-0x14(%ebp)
 150:	8b 45 08             	mov    0x8(%ebp),%eax
 153:	89 45 f0             	mov    %eax,-0x10(%ebp)
 156:	8b 45 0c             	mov    0xc(%ebp),%eax
 159:	89 45 f4             	mov    %eax,-0xc(%ebp)
 15c:	8b 45 10             	mov    0x10(%ebp),%eax
 15f:	89 45 f8             	mov    %eax,-0x8(%ebp)
 162:	8d 45 ec             	lea    -0x14(%ebp),%eax
 165:	50                   	push   %eax
 166:	e8 95 fe ff ff       	call   0 <sys_call>
 16b:	83 c4 04             	add    $0x4,%esp
 16e:	c9                   	leave  
 16f:	c3                   	ret    

00000170 <write>:
 170:	55                   	push   %ebp
 171:	89 e5                	mov    %esp,%ebp
 173:	83 ec 20             	sub    $0x20,%esp
 176:	c7 45 ec 34 00 00 00 	movl   $0x34,-0x14(%ebp)
 17d:	8b 45 08             	mov    0x8(%ebp),%eax
 180:	89 45 f0             	mov    %eax,-0x10(%ebp)
 183:	8b 45 0c             	mov    0xc(%ebp),%eax
 186:	89 45 f4             	mov    %eax,-0xc(%ebp)
 189:	8b 45 10             	mov    0x10(%ebp),%eax
 18c:	89 45 f8             	mov    %eax,-0x8(%ebp)
 18f:	8d 45 ec             	lea    -0x14(%ebp),%eax
 192:	50                   	push   %eax
 193:	e8 68 fe ff ff       	call   0 <sys_call>
 198:	83 c4 04             	add    $0x4,%esp
 19b:	c9                   	leave  
 19c:	c3                   	ret    

0000019d <close>:
 19d:	55                   	push   %ebp
 19e:	89 e5                	mov    %esp,%ebp
 1a0:	83 ec 20             	sub    $0x20,%esp
 1a3:	c7 45 ec 35 00 00 00 	movl   $0x35,-0x14(%ebp)
 1aa:	8b 45 08             	mov    0x8(%ebp),%eax
 1ad:	89 45 f0             	mov    %eax,-0x10(%ebp)
 1b0:	8d 45 ec             	lea    -0x14(%ebp),%eax
 1b3:	50                   	push   %eax
 1b4:	e8 47 fe ff ff       	call   0 <sys_call>
 1b9:	83 c4 04             	add    $0x4,%esp
 1bc:	c9                   	leave  
 1bd:	c3                   	ret    

000001be <lseek>:
 1be:	55                   	push   %ebp
 1bf:	89 e5                	mov    %esp,%ebp
 1c1:	83 ec 20             	sub    $0x20,%esp
 1c4:	c7 45 ec 36 00 00 00 	movl   $0x36,-0x14(%ebp)
 1cb:	8b 45 08             	mov    0x8(%ebp),%eax
 1ce:	89 45 f0             	mov    %eax,-0x10(%ebp)
 1d1:	8b 45 0c             	mov    0xc(%ebp),%eax
 1d4:	89 45 f4             	mov    %eax,-0xc(%ebp)
 1d7:	8b 45 10             	mov    0x10(%ebp),%eax
 1da:	89 45 f8             	mov    %eax,-0x8(%ebp)
 1dd:	8d 45 ec             	lea    -0x14(%ebp),%eax
 1e0:	50                   	push   %eax
 1e1:	e8 1a fe ff ff       	call   0 <sys_call>
 1e6:	83 c4 04             	add    $0x4,%esp
 1e9:	c9                   	leave  
 1ea:	c3                   	ret    

000001eb <isatty>:
 1eb:	55                   	push   %ebp
 1ec:	89 e5                	mov    %esp,%ebp
 1ee:	83 ec 20             	sub    $0x20,%esp
 1f1:	c7 45 ec 37 00 00 00 	movl   $0x37,-0x14(%ebp)
 1f8:	8b 45 08             	mov    0x8(%ebp),%eax
 1fb:	89 45 f0             	mov    %eax,-0x10(%ebp)
 1fe:	8d 45 ec             	lea    -0x14(%ebp),%eax
 201:	50                   	push   %eax
 202:	e8 f9 fd ff ff       	call   0 <sys_call>
 207:	83 c4 04             	add    $0x4,%esp
 20a:	c9                   	leave  
 20b:	c3                   	ret    

0000020c <fstat>:
 20c:	55                   	push   %ebp
 20d:	89 e5                	mov    %esp,%ebp
 20f:	83 ec 20             	sub    $0x20,%esp
 212:	c7 45 ec 38 00 00 00 	movl   $0x38,-0x14(%ebp)
 219:	8b 45 08             	mov    0x8(%ebp),%eax
 21c:	89 45 f0             	mov    %eax,-0x10(%ebp)
 21f:	8b 45 0c             	mov    0xc(%ebp),%eax
 222:	89 45 f4             	mov    %eax,-0xc(%ebp)
 225:	8d 45 ec             	lea    -0x14(%ebp),%eax
 228:	50                   	push   %eax
 229:	e8 d2 fd ff ff       	call   0 <sys_call>
 22e:	83 c4 04             	add    $0x4,%esp
 231:	c9                   	leave  
 232:	c3                   	ret    

00000233 <sbrk>:
 233:	55                   	push   %ebp
 234:	89 e5                	mov    %esp,%ebp
 236:	83 ec 20             	sub    $0x20,%esp
 239:	c7 45 ec 39 00 00 00 	movl   $0x39,-0x14(%ebp)
 240:	8b 45 08             	mov    0x8(%ebp),%eax
 243:	89 45 f0             	mov    %eax,-0x10(%ebp)
 246:	8d 45 ec             	lea    -0x14(%ebp),%eax
 249:	50                   	push   %eax
 24a:	e8 b1 fd ff ff       	call   0 <sys_call>
 24f:	83 c4 04             	add    $0x4,%esp
 252:	c9                   	leave  
 253:	c3                   	ret    

00000254 <dup>:
 254:	55                   	push   %ebp
 255:	89 e5                	mov    %esp,%ebp
 257:	83 ec 20             	sub    $0x20,%esp
 25a:	c7 45 ec 3a 00 00 00 	movl   $0x3a,-0x14(%ebp)
 261:	8b 45 08             	mov    0x8(%ebp),%eax
 264:	89 45 f0             	mov    %eax,-0x10(%ebp)
 267:	8d 45 ec             	lea    -0x14(%ebp),%eax
 26a:	50                   	push   %eax
 26b:	e8 90 fd ff ff       	call   0 <sys_call>
 270:	83 c4 04             	add    $0x4,%esp
 273:	c9                   	leave  
 274:	c3                   	ret    

00000275 <_exit>:
 275:	55                   	push   %ebp
 276:	89 e5                	mov    %esp,%ebp
 278:	83 ec 20             	sub    $0x20,%esp
 27b:	c7 45 ec 05 00 00 00 	movl   $0x5,-0x14(%ebp)
 282:	8b 45 08             	mov    0x8(%ebp),%eax
 285:	89 45 f0             	mov    %eax,-0x10(%ebp)
 288:	8d 45 ec             	lea    -0x14(%ebp),%eax
 28b:	50                   	push   %eax
 28c:	e8 6f fd ff ff       	call   0 <sys_call>
 291:	83 c4 04             	add    $0x4,%esp
 294:	90                   	nop
 295:	c9                   	leave  
 296:	c3                   	ret    

00000297 <wait>:
 297:	55                   	push   %ebp
 298:	89 e5                	mov    %esp,%ebp
 29a:	83 ec 20             	sub    $0x20,%esp
 29d:	c7 45 ec 06 00 00 00 	movl   $0x6,-0x14(%ebp)
 2a4:	8b 45 08             	mov    0x8(%ebp),%eax
 2a7:	89 45 f0             	mov    %eax,-0x10(%ebp)
 2aa:	8d 45 ec             	lea    -0x14(%ebp),%eax
 2ad:	50                   	push   %eax
 2ae:	e8 4d fd ff ff       	call   0 <sys_call>
 2b3:	83 c4 04             	add    $0x4,%esp
 2b6:	c9                   	leave  
 2b7:	c3                   	ret    

000002b8 <opendir>:
 2b8:	55                   	push   %ebp
 2b9:	89 e5                	mov    %esp,%ebp
 2bb:	83 ec 28             	sub    $0x28,%esp
 2be:	83 ec 0c             	sub    $0xc,%esp
 2c1:	68 10 01 00 00       	push   $0x110
 2c6:	e8 fc ff ff ff       	call   2c7 <opendir+0xf>
			2c7: R_386_PC32	malloc
 2cb:	83 c4 10             	add    $0x10,%esp
 2ce:	89 45 f4             	mov    %eax,-0xc(%ebp)
 2d1:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
 2d5:	75 07                	jne    2de <opendir+0x26>
 2d7:	b8 00 00 00 00       	mov    $0x0,%eax
 2dc:	eb 43                	jmp    321 <opendir+0x69>
 2de:	c7 45 dc 3c 00 00 00 	movl   $0x3c,-0x24(%ebp)
 2e5:	8b 45 08             	mov    0x8(%ebp),%eax
 2e8:	89 45 e0             	mov    %eax,-0x20(%ebp)
 2eb:	8b 45 f4             	mov    -0xc(%ebp),%eax
 2ee:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 2f1:	83 ec 0c             	sub    $0xc,%esp
 2f4:	8d 45 dc             	lea    -0x24(%ebp),%eax
 2f7:	50                   	push   %eax
 2f8:	e8 03 fd ff ff       	call   0 <sys_call>
 2fd:	83 c4 10             	add    $0x10,%esp
 300:	89 45 f0             	mov    %eax,-0x10(%ebp)
 303:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
 307:	79 15                	jns    31e <opendir+0x66>
 309:	83 ec 0c             	sub    $0xc,%esp
 30c:	ff 75 f4             	pushl  -0xc(%ebp)
 30f:	e8 fc ff ff ff       	call   310 <opendir+0x58>
			310: R_386_PC32	free
 314:	83 c4 10             	add    $0x10,%esp
 317:	b8 00 00 00 00       	mov    $0x0,%eax
 31c:	eb 03                	jmp    321 <opendir+0x69>
 31e:	8b 45 f4             	mov    -0xc(%ebp),%eax
 321:	c9                   	leave  
 322:	c3                   	ret    

00000323 <readdir>:
 323:	55                   	push   %ebp
 324:	89 e5                	mov    %esp,%ebp
 326:	83 ec 20             	sub    $0x20,%esp
 329:	c7 45 e8 3d 00 00 00 	movl   $0x3d,-0x18(%ebp)
 330:	8b 45 08             	mov    0x8(%ebp),%eax
 333:	89 45 ec             	mov    %eax,-0x14(%ebp)
 336:	8b 45 08             	mov    0x8(%ebp),%eax
 339:	83 c0 04             	add    $0x4,%eax
 33c:	89 45 f0             	mov    %eax,-0x10(%ebp)
 33f:	8d 45 e8             	lea    -0x18(%ebp),%eax
 342:	50                   	push   %eax
 343:	e8 b8 fc ff ff       	call   0 <sys_call>
 348:	83 c4 04             	add    $0x4,%esp
 34b:	89 45 fc             	mov    %eax,-0x4(%ebp)
 34e:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)
 352:	79 07                	jns    35b <readdir+0x38>
 354:	b8 00 00 00 00       	mov    $0x0,%eax
 359:	eb 06                	jmp    361 <readdir+0x3e>
 35b:	8b 45 08             	mov    0x8(%ebp),%eax
 35e:	83 c0 04             	add    $0x4,%eax
 361:	c9                   	leave  
 362:	c3                   	ret    

00000363 <closedir>:
 363:	55                   	push   %ebp
 364:	89 e5                	mov    %esp,%ebp
 366:	83 ec 28             	sub    $0x28,%esp
 369:	c7 45 e4 3e 00 00 00 	movl   $0x3e,-0x1c(%ebp)
 370:	8b 45 08             	mov    0x8(%ebp),%eax
 373:	89 45 e8             	mov    %eax,-0x18(%ebp)
 376:	8d 45 e4             	lea    -0x1c(%ebp),%eax
 379:	50                   	push   %eax
 37a:	e8 81 fc ff ff       	call   0 <sys_call>
 37f:	83 c4 04             	add    $0x4,%esp
 382:	83 ec 0c             	sub    $0xc,%esp
 385:	ff 75 08             	pushl  0x8(%ebp)
 388:	e8 fc ff ff ff       	call   389 <closedir+0x26>
			389: R_386_PC32	free
 38d:	83 c4 10             	add    $0x10,%esp
 390:	b8 00 00 00 00       	mov    $0x0,%eax
 395:	c9                   	leave  
 396:	c3                   	ret    

00000397 <ioctl>:
 397:	55                   	push   %ebp
 398:	89 e5                	mov    %esp,%ebp
 39a:	83 ec 20             	sub    $0x20,%esp
 39d:	c7 45 ec 3b 00 00 00 	movl   $0x3b,-0x14(%ebp)
 3a4:	8b 45 08             	mov    0x8(%ebp),%eax
 3a7:	89 45 f0             	mov    %eax,-0x10(%ebp)
 3aa:	8b 45 0c             	mov    0xc(%ebp),%eax
 3ad:	89 45 f4             	mov    %eax,-0xc(%ebp)
 3b0:	8b 45 10             	mov    0x10(%ebp),%eax
 3b3:	89 45 f8             	mov    %eax,-0x8(%ebp)
 3b6:	8b 45 14             	mov    0x14(%ebp),%eax
 3b9:	89 45 fc             	mov    %eax,-0x4(%ebp)
 3bc:	8d 45 ec             	lea    -0x14(%ebp),%eax
 3bf:	50                   	push   %eax
 3c0:	e8 3b fc ff ff       	call   0 <sys_call>
 3c5:	83 c4 04             	add    $0x4,%esp
 3c8:	c9                   	leave  
 3c9:	c3                   	ret    

000003ca <unlink>:
 3ca:	55                   	push   %ebp
 3cb:	89 e5                	mov    %esp,%ebp
 3cd:	83 ec 20             	sub    $0x20,%esp
 3d0:	c7 45 ec 3f 00 00 00 	movl   $0x3f,-0x14(%ebp)
 3d7:	8b 45 08             	mov    0x8(%ebp),%eax
 3da:	89 45 f0             	mov    %eax,-0x10(%ebp)
 3dd:	8d 45 ec             	lea    -0x14(%ebp),%eax
 3e0:	50                   	push   %eax
 3e1:	e8 1a fc ff ff       	call   0 <sys_call>
 3e6:	83 c4 04             	add    $0x4,%esp
 3e9:	c9                   	leave  
 3ea:	c3                   	ret    
