
E:/ubuntu/diy-x86os/start/start/build/source/loader/loader.elf:     file format elf32-i386
E:/ubuntu/diy-x86os/start/start/build/source/loader/loader.elf
architecture: i386, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00008000

Program Header:
    LOAD off    0x00001000 vaddr 0x00008000 paddr 0x00008000 align 2**12
         filesz 0x000006f4 memsz 0x000006f4 flags r-x
    LOAD off    0x00002000 vaddr 0x00009000 paddr 0x00009000 align 2**12
         filesz 0x00002000 memsz 0x000020a4 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000006ac  00008000  00008000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .rodata       00000048  000086ac  000086ac  000016ac  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .data         00002000  00009000  00009000  00002000  2**12
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          000000a4  0000b000  0000b000  00004000  2**5
                  ALLOC
  4 .comment      00000011  00000000  00000000  00004000  2**0
                  CONTENTS, READONLY
  5 .debug_aranges 00000060  00000000  00000000  00004018  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000009d7  00000000  00000000  00004078  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000034a  00000000  00000000  00004a4f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000344  00000000  00000000  00004d99  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000320  00000000  00000000  000050e0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000447  00000000  00000000  00005400  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000018  00000000  00000000  00005847  2**0
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
00008000 l    d  .text	00000000 .text
000086ac l    d  .rodata	00000000 .rodata
00009000 l    d  .data	00000000 .data
0000b000 l    d  .bss	00000000 .bss
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 loader_16.c
00008018 l     F .text	0000002a inb
00008042 l     F .text	0000002d outb
0000806f l     F .text	0000000b cli
0000807a l     F .text	00000036 lgdt
000080b0 l     F .text	0000001a read_cr0
000080ca l     F .text	00000012 write_cr0
000080dc l     F .text	0000002b far_jump
00008107 l     F .text	0000003b show_msg
00008142 l     F .text	00000130 detect_memory
00008272 l     F .text	00000092 enter_protect_mode
00000000 l    df *ABS*	00000000 loader_32.c
00008327 l     F .text	0000001d inb
00008344 l     F .text	0000001f inw
00008363 l     F .text	0000001f outb
00008382 l     F .text	00000011 read_cr0
00008393 l     F .text	0000000c write_cr0
0000839f l     F .text	0000000c write_cr3
000083ab l     F .text	00000011 read_cr4
000083bc l     F .text	0000000c write_cr4
000083c8 l     F .text	0000012d read_disk
000084f5 l     F .text	0000011a reload_elf_file
0000860f l     F .text	00000005 die
0000a000 l     O .data	00001000 page_dir.1910
00008304 g     F .text	00000023 loader_entry
00009000 g     O .data	00000018 gdt_table_16
0000865b g     F .text	00000051 load_kernel
00008614 g     F .text	00000047 enable_page_mode
0000b000 g     O .bss	000000a4 boot_info
00008000 g       .text	00000000 _start
0000b000 g       .bss	00000000 __bss_start
00008003 g       .text	00000000 protect_mode_entry
0000b000 g       .data	00000000 _edata
0000b0a4 g       .bss	00000000 _end



Disassembly of section .text:

00008000 <_start>:
    8000:	e9 01 03             	jmp    8304 <loader_entry>

00008003 <protect_mode_entry>:
    8003:	66 b8 10 00 8e d8    	mov    $0xd88e0010,%eax
    8009:	8e c0                	mov    %ax,%es
    800b:	8e e0                	mov    %ax,%fs
    800d:	8e e8                	mov    %ax,%gs
    800f:	8e d0                	mov    %ax,%ss
    8011:	ea 5b 86 00 00       	ljmp   $0x0,$0x865b
    8016:	08 00                	or     %al,(%bx,%si)

00008018 <inb>:
    8018:	66 55                	push   %ebp
    801a:	66 89 e5             	mov    %esp,%ebp
    801d:	66 83 ec 14          	sub    $0x14,%esp
    8021:	67 66 8b 45 08       	mov    0x8(%ebp),%eax
    8026:	67 89 45 ec          	mov    %ax,-0x14(%ebp)
    802a:	67 66 0f b7 45 ec    	movzwl -0x14(%ebp),%eax
    8030:	66 89 c2             	mov    %eax,%edx
    8033:	ec                   	in     (%dx),%al
    8034:	67 88 45 ff          	mov    %al,-0x1(%ebp)
    8038:	67 66 0f b6 45 ff    	movzbl -0x1(%ebp),%eax
    803e:	66 c9                	leavel 
    8040:	66 c3                	retl   

00008042 <outb>:
    8042:	66 55                	push   %ebp
    8044:	66 89 e5             	mov    %esp,%ebp
    8047:	66 83 ec 08          	sub    $0x8,%esp
    804b:	67 66 8b 55 08       	mov    0x8(%ebp),%edx
    8050:	67 66 8b 45 0c       	mov    0xc(%ebp),%eax
    8055:	67 89 55 fc          	mov    %dx,-0x4(%ebp)
    8059:	67 88 45 f8          	mov    %al,-0x8(%ebp)
    805d:	67 66 0f b7 55 fc    	movzwl -0x4(%ebp),%edx
    8063:	67 66 0f b6 45 f8    	movzbl -0x8(%ebp),%eax
    8069:	ee                   	out    %al,(%dx)
    806a:	90                   	nop
    806b:	66 c9                	leavel 
    806d:	66 c3                	retl   

0000806f <cli>:
    806f:	66 55                	push   %ebp
    8071:	66 89 e5             	mov    %esp,%ebp
    8074:	fa                   	cli    
    8075:	90                   	nop
    8076:	66 5d                	pop    %ebp
    8078:	66 c3                	retl   

0000807a <lgdt>:
    807a:	66 55                	push   %ebp
    807c:	66 89 e5             	mov    %esp,%ebp
    807f:	66 83 ec 10          	sub    $0x10,%esp
    8083:	67 66 8b 45 08       	mov    0x8(%ebp),%eax
    8088:	66 c1 e8 10          	shr    $0x10,%eax
    808c:	67 89 45 fe          	mov    %ax,-0x2(%ebp)
    8090:	67 66 8b 45 08       	mov    0x8(%ebp),%eax
    8095:	67 89 45 fc          	mov    %ax,-0x4(%ebp)
    8099:	67 66 8b 45 0c       	mov    0xc(%ebp),%eax
    809e:	66 83 e8 01          	sub    $0x1,%eax
    80a2:	67 89 45 fa          	mov    %ax,-0x6(%ebp)
    80a6:	67 0f 01 55 fa       	lgdtw  -0x6(%ebp)
    80ab:	90                   	nop
    80ac:	66 c9                	leavel 
    80ae:	66 c3                	retl   

000080b0 <read_cr0>:
    80b0:	66 55                	push   %ebp
    80b2:	66 89 e5             	mov    %esp,%ebp
    80b5:	66 83 ec 10          	sub    $0x10,%esp
    80b9:	0f 20 c0             	mov    %cr0,%eax
    80bc:	67 66 89 45 fc       	mov    %eax,-0x4(%ebp)
    80c1:	67 66 8b 45 fc       	mov    -0x4(%ebp),%eax
    80c6:	66 c9                	leavel 
    80c8:	66 c3                	retl   

000080ca <write_cr0>:
    80ca:	66 55                	push   %ebp
    80cc:	66 89 e5             	mov    %esp,%ebp
    80cf:	67 66 8b 45 08       	mov    0x8(%ebp),%eax
    80d4:	0f 22 c0             	mov    %eax,%cr0
    80d7:	90                   	nop
    80d8:	66 5d                	pop    %ebp
    80da:	66 c3                	retl   

000080dc <far_jump>:
    80dc:	66 55                	push   %ebp
    80de:	66 89 e5             	mov    %esp,%ebp
    80e1:	66 83 ec 10          	sub    $0x10,%esp
    80e5:	67 66 8b 45 0c       	mov    0xc(%ebp),%eax
    80ea:	67 66 89 45 f8       	mov    %eax,-0x8(%ebp)
    80ef:	67 66 8b 45 08       	mov    0x8(%ebp),%eax
    80f4:	67 66 89 45 fc       	mov    %eax,-0x4(%ebp)
    80f9:	67 66 8d 45 f8       	lea    -0x8(%ebp),%eax
    80fe:	67 66 ff 28          	ljmpl  *(%eax)
    8102:	90                   	nop
    8103:	66 c9                	leavel 
    8105:	66 c3                	retl   

00008107 <show_msg>:
    8107:	66 55                	push   %ebp
    8109:	66 89 e5             	mov    %esp,%ebp
    810c:	66 83 ec 10          	sub    $0x10,%esp
    8110:	eb 0c                	jmp    811e <show_msg+0x17>
    8112:	67 66 0f b6 45 ff    	movzbl -0x1(%ebp),%eax
    8118:	b4 0e                	mov    $0xe,%ah
    811a:	88 c0                	mov    %al,%al
    811c:	cd 10                	int    $0x10
    811e:	67 66 8b 45 08       	mov    0x8(%ebp),%eax
    8123:	67 66 8d 50 01       	lea    0x1(%eax),%edx
    8128:	67 66 89 55 08       	mov    %edx,0x8(%ebp)
    812d:	67 66 0f b6 00       	movzbl (%eax),%eax
    8132:	67 88 45 ff          	mov    %al,-0x1(%ebp)
    8136:	67 80 7d ff 00       	cmpb   $0x0,-0x1(%ebp)
    813b:	75 d5                	jne    8112 <show_msg+0xb>
    813d:	90                   	nop
    813e:	66 c9                	leavel 
    8140:	66 c3                	retl   

00008142 <detect_memory>:
    8142:	66 55                	push   %ebp
    8144:	66 89 e5             	mov    %esp,%ebp
    8147:	66 57                	push   %edi
    8149:	66 56                	push   %esi
    814b:	66 53                	push   %ebx
    814d:	66 83 ec 30          	sub    $0x30,%esp
    8151:	67 66 c7 45 f0 00 00 	movl   $0x0,-0x10(%ebp)
    8158:	00 00 
    815a:	66 68 ac 86 00 00    	pushl  $0x86ac
    8160:	66 e8 a1 ff ff ff    	calll  8107 <show_msg>
    8166:	66 83 c4 04          	add    $0x4,%esp
    816a:	67 66 c7 45 ec 00 00 	movl   $0x0,-0x14(%ebp)
    8171:	00 00 
    8173:	e9 d0 00             	jmp    8246 <detect_memory+0x104>
    8176:	67 66 8d 45 c8       	lea    -0x38(%ebp),%eax
    817b:	67 66 89 45 e8       	mov    %eax,-0x18(%ebp)
    8180:	66 b8 20 e8 00 00    	mov    $0xe820,%eax
    8186:	67 66 8b 5d f0       	mov    -0x10(%ebp),%ebx
    818b:	66 b9 18 00 00 00    	mov    $0x18,%ecx
    8191:	66 ba 50 41 4d 53    	mov    $0x534d4150,%edx
    8197:	67 66 8b 75 e8       	mov    -0x18(%ebp),%esi
    819c:	66 89 f7             	mov    %esi,%edi
    819f:	cd 15                	int    $0x15
    81a1:	66 89 da             	mov    %ebx,%edx
    81a4:	67 66 89 45 e4       	mov    %eax,-0x1c(%ebp)
    81a9:	67 66 89 4d e0       	mov    %ecx,-0x20(%ebp)
    81ae:	67 66 89 55 f0       	mov    %edx,-0x10(%ebp)
    81b3:	67 66 81 7d e4 50 41 	cmpl   $0x534d4150,-0x1c(%ebp)
    81ba:	4d 53 
    81bc:	74 13                	je     81d1 <detect_memory+0x8f>
    81be:	66 68 c6 86 00 00    	pushl  $0x86c6
    81c4:	66 e8 3d ff ff ff    	calll  8107 <show_msg>
    81ca:	66 83 c4 04          	add    $0x4,%esp
    81ce:	e9 92 00             	jmp    8263 <detect_memory+0x121>
    81d1:	67 66 83 7d e0 14    	cmpl   $0x14,-0x20(%ebp)
    81d7:	76 13                	jbe    81ec <detect_memory+0xaa>
    81d9:	67 66 8b 45 e8       	mov    -0x18(%ebp),%eax
    81de:	67 66 8b 40 14       	mov    0x14(%eax),%eax
    81e3:	66 83 e0 01          	and    $0x1,%eax
    81e7:	66 85 c0             	test   %eax,%eax
    81ea:	74 53                	je     823f <detect_memory+0xfd>
    81ec:	67 66 8b 45 e8       	mov    -0x18(%ebp),%eax
    81f1:	67 66 8b 40 10       	mov    0x10(%eax),%eax
    81f6:	66 83 f8 01          	cmp    $0x1,%eax
    81fa:	75 39                	jne    8235 <detect_memory+0xf3>
    81fc:	66 a1 a0 b0          	mov    0xb0a0,%eax
    8200:	67 66 8b 55 e8       	mov    -0x18(%ebp),%edx
    8205:	67 66 8b 12          	mov    (%edx),%edx
    8209:	67 66 89 14 c5 00 b0 	mov    %edx,0xb000(,%eax,8)
    8210:	00 00 
    8212:	66 a1 a0 b0          	mov    0xb0a0,%eax
    8216:	67 66 8b 55 e8       	mov    -0x18(%ebp),%edx
    821b:	67 66 8b 52 08       	mov    0x8(%edx),%edx
    8220:	67 66 89 14 c5 04 b0 	mov    %edx,0xb004(,%eax,8)
    8227:	00 00 
    8229:	66 a1 a0 b0          	mov    0xb0a0,%eax
    822d:	66 83 c0 01          	add    $0x1,%eax
    8231:	66 a3 a0 b0          	mov    %eax,0xb0a0
    8235:	67 66 83 7d f0 00    	cmpl   $0x0,-0x10(%ebp)
    823b:	74 15                	je     8252 <detect_memory+0x110>
    823d:	eb 01                	jmp    8240 <detect_memory+0xfe>
    823f:	90                   	nop
    8240:	67 66 83 45 ec 01    	addl   $0x1,-0x14(%ebp)
    8246:	67 66 83 7d ec 13    	cmpl   $0x13,-0x14(%ebp)
    824c:	0f 8e 26 ff          	jle    8176 <detect_memory+0x34>
    8250:	eb 01                	jmp    8253 <detect_memory+0x111>
    8252:	90                   	nop
    8253:	66 68 cf 86 00 00    	pushl  $0x86cf
    8259:	66 e8 a8 fe ff ff    	calll  8107 <show_msg>
    825f:	66 83 c4 04          	add    $0x4,%esp
    8263:	67 66 8d 65 f4       	lea    -0xc(%ebp),%esp
    8268:	66 5b                	pop    %ebx
    826a:	66 5e                	pop    %esi
    826c:	66 5f                	pop    %edi
    826e:	66 5d                	pop    %ebp
    8270:	66 c3                	retl   

00008272 <enter_protect_mode>:
    8272:	66 55                	push   %ebp
    8274:	66 89 e5             	mov    %esp,%ebp
    8277:	66 83 ec 10          	sub    $0x10,%esp
    827b:	66 e8 ee fd ff ff    	calll  806f <cli>
    8281:	66 68 92 00 00 00    	pushl  $0x92
    8287:	66 e8 8b fd ff ff    	calll  8018 <inb>
    828d:	66 83 c4 04          	add    $0x4,%esp
    8291:	67 88 45 ff          	mov    %al,-0x1(%ebp)
    8295:	67 66 0f b6 45 ff    	movzbl -0x1(%ebp),%eax
    829b:	66 83 c8 02          	or     $0x2,%eax
    829f:	66 0f b6 c0          	movzbl %al,%eax
    82a3:	66 50                	push   %eax
    82a5:	66 68 92 00 00 00    	pushl  $0x92
    82ab:	66 e8 91 fd ff ff    	calll  8042 <outb>
    82b1:	66 83 c4 08          	add    $0x8,%esp
    82b5:	66 b8 00 90 00 00    	mov    $0x9000,%eax
    82bb:	66 6a 18             	pushl  $0x18
    82be:	66 50                	push   %eax
    82c0:	66 e8 b4 fd ff ff    	calll  807a <lgdt>
    82c6:	66 83 c4 08          	add    $0x8,%esp
    82ca:	66 e8 e0 fd ff ff    	calll  80b0 <read_cr0>
    82d0:	67 66 89 45 f8       	mov    %eax,-0x8(%ebp)
    82d5:	67 66 8b 45 f8       	mov    -0x8(%ebp),%eax
    82da:	66 83 c8 01          	or     $0x1,%eax
    82de:	66 50                	push   %eax
    82e0:	66 e8 e4 fd ff ff    	calll  80ca <write_cr0>
    82e6:	66 83 c4 04          	add    $0x4,%esp
    82ea:	66 b8 03 80 00 00    	mov    $0x8003,%eax
    82f0:	66 50                	push   %eax
    82f2:	66 6a 08             	pushl  $0x8
    82f5:	66 e8 e1 fd ff ff    	calll  80dc <far_jump>
    82fb:	66 83 c4 08          	add    $0x8,%esp
    82ff:	90                   	nop
    8300:	66 c9                	leavel 
    8302:	66 c3                	retl   

00008304 <loader_entry>:
    8304:	66 55                	push   %ebp
    8306:	66 89 e5             	mov    %esp,%ebp
    8309:	66 68 e4 86 00 00    	pushl  $0x86e4
    830f:	66 e8 f2 fd ff ff    	calll  8107 <show_msg>
    8315:	66 83 c4 04          	add    $0x4,%esp
    8319:	66 e8 23 fe ff ff    	calll  8142 <detect_memory>
    831f:	66 e8 4d ff ff ff    	calll  8272 <enter_protect_mode>
    8325:	eb fe                	jmp    8325 <loader_entry+0x21>

00008327 <inb>:
    8327:	55                   	push   %bp
    8328:	89 e5                	mov    %sp,%bp
    832a:	83 ec 14             	sub    $0x14,%sp
    832d:	8b 45 08             	mov    0x8(%di),%ax
    8330:	66 89 45 ec          	mov    %eax,-0x14(%di)
    8334:	0f b7 45 ec          	movzww -0x14(%di),%ax
    8338:	89 c2                	mov    %ax,%dx
    833a:	ec                   	in     (%dx),%al
    833b:	88 45 ff             	mov    %al,-0x1(%di)
    833e:	0f b6 45 ff          	movzbw -0x1(%di),%ax
    8342:	c9                   	leave  
    8343:	c3                   	ret    

00008344 <inw>:
    8344:	55                   	push   %bp
    8345:	89 e5                	mov    %sp,%bp
    8347:	83 ec 14             	sub    $0x14,%sp
    834a:	8b 45 08             	mov    0x8(%di),%ax
    834d:	66 89 45 ec          	mov    %eax,-0x14(%di)
    8351:	0f b7 45 ec          	movzww -0x14(%di),%ax
    8355:	89 c2                	mov    %ax,%dx
    8357:	66 ed                	in     (%dx),%eax
    8359:	66 89 45 fe          	mov    %eax,-0x2(%di)
    835d:	0f b7 45 fe          	movzww -0x2(%di),%ax
    8361:	c9                   	leave  
    8362:	c3                   	ret    

00008363 <outb>:
    8363:	55                   	push   %bp
    8364:	89 e5                	mov    %sp,%bp
    8366:	83 ec 08             	sub    $0x8,%sp
    8369:	8b 55 08             	mov    0x8(%di),%dx
    836c:	8b 45 0c             	mov    0xc(%di),%ax
    836f:	66 89 55 fc          	mov    %edx,-0x4(%di)
    8373:	88 45 f8             	mov    %al,-0x8(%di)
    8376:	0f b7 55 fc          	movzww -0x4(%di),%dx
    837a:	0f b6 45 f8          	movzbw -0x8(%di),%ax
    837e:	ee                   	out    %al,(%dx)
    837f:	90                   	nop
    8380:	c9                   	leave  
    8381:	c3                   	ret    

00008382 <read_cr0>:
    8382:	55                   	push   %bp
    8383:	89 e5                	mov    %sp,%bp
    8385:	83 ec 10             	sub    $0x10,%sp
    8388:	0f 20 c0             	mov    %cr0,%eax
    838b:	89 45 fc             	mov    %ax,-0x4(%di)
    838e:	8b 45 fc             	mov    -0x4(%di),%ax
    8391:	c9                   	leave  
    8392:	c3                   	ret    

00008393 <write_cr0>:
    8393:	55                   	push   %bp
    8394:	89 e5                	mov    %sp,%bp
    8396:	8b 45 08             	mov    0x8(%di),%ax
    8399:	0f 22 c0             	mov    %eax,%cr0
    839c:	90                   	nop
    839d:	5d                   	pop    %bp
    839e:	c3                   	ret    

0000839f <write_cr3>:
    839f:	55                   	push   %bp
    83a0:	89 e5                	mov    %sp,%bp
    83a2:	8b 45 08             	mov    0x8(%di),%ax
    83a5:	0f 22 d8             	mov    %eax,%cr3
    83a8:	90                   	nop
    83a9:	5d                   	pop    %bp
    83aa:	c3                   	ret    

000083ab <read_cr4>:
    83ab:	55                   	push   %bp
    83ac:	89 e5                	mov    %sp,%bp
    83ae:	83 ec 10             	sub    $0x10,%sp
    83b1:	0f 20 e0             	mov    %cr4,%eax
    83b4:	89 45 fc             	mov    %ax,-0x4(%di)
    83b7:	8b 45 fc             	mov    -0x4(%di),%ax
    83ba:	c9                   	leave  
    83bb:	c3                   	ret    

000083bc <write_cr4>:
    83bc:	55                   	push   %bp
    83bd:	89 e5                	mov    %sp,%bp
    83bf:	8b 45 08             	mov    0x8(%di),%ax
    83c2:	0f 22 e0             	mov    %eax,%cr4
    83c5:	90                   	nop
    83c6:	5d                   	pop    %bp
    83c7:	c3                   	ret    

000083c8 <read_disk>:
    83c8:	55                   	push   %bp
    83c9:	89 e5                	mov    %sp,%bp
    83cb:	53                   	push   %bx
    83cc:	83 ec 10             	sub    $0x10,%sp
    83cf:	68 e0 00             	push   $0xe0
    83d2:	00 00                	add    %al,(%bx,%si)
    83d4:	68 f6 01             	push   $0x1f6
    83d7:	00 00                	add    %al,(%bx,%si)
    83d9:	e8 85 ff             	call   8361 <inw+0x1d>
    83dc:	ff                   	(bad)  
    83dd:	ff 83 c4 08          	incw   0x8c4(%bp,%di)
    83e1:	8b 45 0c             	mov    0xc(%di),%ax
    83e4:	c1 e8 08             	shr    $0x8,%ax
    83e7:	0f b6 c0             	movzbw %al,%ax
    83ea:	50                   	push   %ax
    83eb:	68 f2 01             	push   $0x1f2
    83ee:	00 00                	add    %al,(%bx,%si)
    83f0:	e8 6e ff             	call   8361 <inw+0x1d>
    83f3:	ff                   	(bad)  
    83f4:	ff 83 c4 08          	incw   0x8c4(%bp,%di)
    83f8:	8b 45 08             	mov    0x8(%di),%ax
    83fb:	c1 e8 18             	shr    $0x18,%ax
    83fe:	0f b6 c0             	movzbw %al,%ax
    8401:	50                   	push   %ax
    8402:	68 f3 01             	push   $0x1f3
    8405:	00 00                	add    %al,(%bx,%si)
    8407:	e8 57 ff             	call   8361 <inw+0x1d>
    840a:	ff                   	(bad)  
    840b:	ff 83 c4 08          	incw   0x8c4(%bp,%di)
    840f:	6a 00                	push   $0x0
    8411:	68 f4 01             	push   $0x1f4
    8414:	00 00                	add    %al,(%bx,%si)
    8416:	e8 48 ff             	call   8361 <inw+0x1d>
    8419:	ff                   	(bad)  
    841a:	ff 83 c4 08          	incw   0x8c4(%bp,%di)
    841e:	6a 00                	push   $0x0
    8420:	68 f5 01             	push   $0x1f5
    8423:	00 00                	add    %al,(%bx,%si)
    8425:	e8 39 ff             	call   8361 <inw+0x1d>
    8428:	ff                   	(bad)  
    8429:	ff 83 c4 08          	incw   0x8c4(%bp,%di)
    842d:	8b 45 0c             	mov    0xc(%di),%ax
    8430:	0f b6 c0             	movzbw %al,%ax
    8433:	50                   	push   %ax
    8434:	68 f2 01             	push   $0x1f2
    8437:	00 00                	add    %al,(%bx,%si)
    8439:	e8 25 ff             	call   8361 <inw+0x1d>
    843c:	ff                   	(bad)  
    843d:	ff 83 c4 08          	incw   0x8c4(%bp,%di)
    8441:	8b 45 08             	mov    0x8(%di),%ax
    8444:	0f b6 c0             	movzbw %al,%ax
    8447:	50                   	push   %ax
    8448:	68 f3 01             	push   $0x1f3
    844b:	00 00                	add    %al,(%bx,%si)
    844d:	e8 11 ff             	call   8361 <inw+0x1d>
    8450:	ff                   	(bad)  
    8451:	ff 83 c4 08          	incw   0x8c4(%bp,%di)
    8455:	8b 45 08             	mov    0x8(%di),%ax
    8458:	c1 e8 08             	shr    $0x8,%ax
    845b:	0f b6 c0             	movzbw %al,%ax
    845e:	50                   	push   %ax
    845f:	68 f4 01             	push   $0x1f4
    8462:	00 00                	add    %al,(%bx,%si)
    8464:	e8 fa fe             	call   8361 <inw+0x1d>
    8467:	ff                   	(bad)  
    8468:	ff 83 c4 08          	incw   0x8c4(%bp,%di)
    846c:	8b 45 08             	mov    0x8(%di),%ax
    846f:	c1 e8 10             	shr    $0x10,%ax
    8472:	0f b6 c0             	movzbw %al,%ax
    8475:	50                   	push   %ax
    8476:	68 f5 01             	push   $0x1f5
    8479:	00 00                	add    %al,(%bx,%si)
    847b:	e8 e3 fe             	call   8361 <inw+0x1d>
    847e:	ff                   	(bad)  
    847f:	ff 83 c4 08          	incw   0x8c4(%bp,%di)
    8483:	6a 24                	push   $0x24
    8485:	68 f7 01             	push   $0x1f7
    8488:	00 00                	add    %al,(%bx,%si)
    848a:	e8 d4 fe             	call   8361 <inw+0x1d>
    848d:	ff                   	(bad)  
    848e:	ff 83 c4 08          	incw   0x8c4(%bp,%di)
    8492:	8b 45 10             	mov    0x10(%di),%ax
    8495:	89 45 f8             	mov    %ax,-0x8(%di)
    8498:	eb 48                	jmp    84e2 <read_disk+0x11a>
    849a:	90                   	nop
    849b:	68 f7 01             	push   $0x1f7
    849e:	00 00                	add    %al,(%bx,%si)
    84a0:	e8 82 fe             	call   8325 <loader_entry+0x21>
    84a3:	ff                   	(bad)  
    84a4:	ff 83 c4 04          	incw   0x4c4(%bp,%di)
    84a8:	0f b6 c0             	movzbw %al,%ax
    84ab:	83 e0 08             	and    $0x8,%ax
    84ae:	83 f8 08             	cmp    $0x8,%ax
    84b1:	75 e8                	jne    849b <read_disk+0xd3>
    84b3:	c7 45 f4 00 00       	movw   $0x0,-0xc(%di)
    84b8:	00 00                	add    %al,(%bx,%si)
    84ba:	eb 1d                	jmp    84d9 <read_disk+0x111>
    84bc:	8b 5d f8             	mov    -0x8(%di),%bx
    84bf:	8d 43 02             	lea    0x2(%bp,%di),%ax
    84c2:	89 45 f8             	mov    %ax,-0x8(%di)
    84c5:	68 f0 01             	push   $0x1f0
    84c8:	00 00                	add    %al,(%bx,%si)
    84ca:	e8 75 fe             	call   8342 <inb+0x1b>
    84cd:	ff                   	(bad)  
    84ce:	ff 83 c4 04          	incw   0x4c4(%bp,%di)
    84d2:	66 89 03             	mov    %eax,(%bp,%di)
    84d5:	83 45 f4 01          	addw   $0x1,-0xc(%di)
    84d9:	81 7d f4 ff 00       	cmpw   $0xff,-0xc(%di)
    84de:	00 00                	add    %al,(%bx,%si)
    84e0:	7e da                	jle    84bc <read_disk+0xf4>
    84e2:	8b 45 0c             	mov    0xc(%di),%ax
    84e5:	8d 50 ff             	lea    -0x1(%bx,%si),%dx
    84e8:	89 55 0c             	mov    %dx,0xc(%di)
    84eb:	85 c0                	test   %ax,%ax
    84ed:	75 ab                	jne    849a <read_disk+0xd2>
    84ef:	90                   	nop
    84f0:	8b 5d fc             	mov    -0x4(%di),%bx
    84f3:	c9                   	leave  
    84f4:	c3                   	ret    

000084f5 <reload_elf_file>:
    84f5:	55                   	push   %bp
    84f6:	89 e5                	mov    %sp,%bp
    84f8:	83 ec 20             	sub    $0x20,%sp
    84fb:	8b 45 08             	mov    0x8(%di),%ax
    84fe:	89 45 e8             	mov    %ax,-0x18(%di)
    8501:	8b 45 e8             	mov    -0x18(%di),%ax
    8504:	0f b6 00             	movzbw (%bx,%si),%ax
    8507:	3c 7f                	cmp    $0x7f,%al
    8509:	75 21                	jne    852c <reload_elf_file+0x37>
    850b:	8b 45 e8             	mov    -0x18(%di),%ax
    850e:	0f b6 40 01          	movzbw 0x1(%bx,%si),%ax
    8512:	3c 45                	cmp    $0x45,%al
    8514:	75 16                	jne    852c <reload_elf_file+0x37>
    8516:	8b 45 e8             	mov    -0x18(%di),%ax
    8519:	0f b6 40 02          	movzbw 0x2(%bx,%si),%ax
    851d:	3c 4c                	cmp    $0x4c,%al
    851f:	75 0b                	jne    852c <reload_elf_file+0x37>
    8521:	8b 45 e8             	mov    -0x18(%di),%ax
    8524:	0f b6 40 03          	movzbw 0x3(%bx,%si),%ax
    8528:	3c 46                	cmp    $0x46,%al
    852a:	74 0a                	je     8536 <reload_elf_file+0x41>
    852c:	b8 00 00             	mov    $0x0,%ax
    852f:	00 00                	add    %al,(%bx,%si)
    8531:	e9 d7 00             	jmp    860b <reload_elf_file+0x116>
    8534:	00 00                	add    %al,(%bx,%si)
    8536:	c7 45 fc 00 00       	movw   $0x0,-0x4(%di)
    853b:	00 00                	add    %al,(%bx,%si)
    853d:	e9 b2 00             	jmp    85f2 <reload_elf_file+0xfd>
    8540:	00 00                	add    %al,(%bx,%si)
    8542:	8b 45 e8             	mov    -0x18(%di),%ax
    8545:	8b 50 1c             	mov    0x1c(%bx,%si),%dx
    8548:	8b 45 08             	mov    0x8(%di),%ax
    854b:	01 c2                	add    %ax,%dx
    854d:	8b 45 fc             	mov    -0x4(%di),%ax
    8550:	c1 e0 05             	shl    $0x5,%ax
    8553:	01 d0                	add    %dx,%ax
    8555:	89 45 e4             	mov    %ax,-0x1c(%di)
    8558:	8b 45 e4             	mov    -0x1c(%di),%ax
    855b:	8b 00                	mov    (%bx,%si),%ax
    855d:	83 f8 01             	cmp    $0x1,%ax
    8560:	0f 85 89 00          	jne    85ed <reload_elf_file+0xf8>
    8564:	00 00                	add    %al,(%bx,%si)
    8566:	8b 45 e4             	mov    -0x1c(%di),%ax
    8569:	8b 50 04             	mov    0x4(%bx,%si),%dx
    856c:	8b 45 08             	mov    0x8(%di),%ax
    856f:	01 d0                	add    %dx,%ax
    8571:	89 45 f8             	mov    %ax,-0x8(%di)
    8574:	8b 45 e4             	mov    -0x1c(%di),%ax
    8577:	8b 40 0c             	mov    0xc(%bx,%si),%ax
    857a:	89 45 f4             	mov    %ax,-0xc(%di)
    857d:	c7 45 f0 00 00       	movw   $0x0,-0x10(%di)
    8582:	00 00                	add    %al,(%bx,%si)
    8584:	eb 1b                	jmp    85a1 <reload_elf_file+0xac>
    8586:	8b 55 f8             	mov    -0x8(%di),%dx
    8589:	8d 42 01             	lea    0x1(%bp,%si),%ax
    858c:	89 45 f8             	mov    %ax,-0x8(%di)
    858f:	8b 45 f4             	mov    -0xc(%di),%ax
    8592:	8d 48 01             	lea    0x1(%bx,%si),%cx
    8595:	89 4d f4             	mov    %cx,-0xc(%di)
    8598:	0f b6 12             	movzbw (%bp,%si),%dx
    859b:	88 10                	mov    %dl,(%bx,%si)
    859d:	83 45 f0 01          	addw   $0x1,-0x10(%di)
    85a1:	8b 45 e4             	mov    -0x1c(%di),%ax
    85a4:	8b 50 10             	mov    0x10(%bx,%si),%dx
    85a7:	8b 45 f0             	mov    -0x10(%di),%ax
    85aa:	39 c2                	cmp    %ax,%dx
    85ac:	77 d8                	ja     8586 <reload_elf_file+0x91>
    85ae:	8b 45 e4             	mov    -0x1c(%di),%ax
    85b1:	8b 50 10             	mov    0x10(%bx,%si),%dx
    85b4:	8b 45 e4             	mov    -0x1c(%di),%ax
    85b7:	8b 40 0c             	mov    0xc(%bx,%si),%ax
    85ba:	01 d0                	add    %dx,%ax
    85bc:	89 45 f4             	mov    %ax,-0xc(%di)
    85bf:	c7 45 ec 00 00       	movw   $0x0,-0x14(%di)
    85c4:	00 00                	add    %al,(%bx,%si)
    85c6:	eb 10                	jmp    85d8 <reload_elf_file+0xe3>
    85c8:	8b 45 f4             	mov    -0xc(%di),%ax
    85cb:	8d 50 01             	lea    0x1(%bx,%si),%dx
    85ce:	89 55 f4             	mov    %dx,-0xc(%di)
    85d1:	c6 00 00             	movb   $0x0,(%bx,%si)
    85d4:	83 45 ec 01          	addw   $0x1,-0x14(%di)
    85d8:	8b 45 e4             	mov    -0x1c(%di),%ax
    85db:	8b 50 14             	mov    0x14(%bx,%si),%dx
    85de:	8b 45 e4             	mov    -0x1c(%di),%ax
    85e1:	8b 40 10             	mov    0x10(%bx,%si),%ax
    85e4:	29 c2                	sub    %ax,%dx
    85e6:	8b 45 ec             	mov    -0x14(%di),%ax
    85e9:	39 c2                	cmp    %ax,%dx
    85eb:	77 db                	ja     85c8 <reload_elf_file+0xd3>
    85ed:	eb 01                	jmp    85f0 <reload_elf_file+0xfb>
    85ef:	90                   	nop
    85f0:	83 45 fc 01          	addw   $0x1,-0x4(%di)
    85f4:	8b 45 e8             	mov    -0x18(%di),%ax
    85f7:	0f b7 40 2c          	movzww 0x2c(%bx,%si),%ax
    85fb:	0f b7 c0             	movzww %ax,%ax
    85fe:	39 45 fc             	cmp    %ax,-0x4(%di)
    8601:	0f 8c 3b ff          	jl     8540 <reload_elf_file+0x4b>
    8605:	ff                   	(bad)  
    8606:	ff 8b 45 e8          	decw   -0x17bb(%bp,%di)
    860a:	8b 40 18             	mov    0x18(%bx,%si),%ax
    860d:	c9                   	leave  
    860e:	c3                   	ret    

0000860f <die>:
    860f:	55                   	push   %bp
    8610:	89 e5                	mov    %sp,%bp
    8612:	eb fe                	jmp    8612 <die+0x3>

00008614 <enable_page_mode>:
    8614:	55                   	push   %bp
    8615:	89 e5                	mov    %sp,%bp
    8617:	83 ec 10             	sub    $0x10,%sp
    861a:	e8 8c fd             	call   83a9 <write_cr3+0xa>
    861d:	ff                   	(bad)  
    861e:	ff 89 45 fc          	decw   -0x3bb(%bx,%di)
    8622:	e8 5b fd             	call   8380 <outb+0x1d>
    8625:	ff                   	(bad)  
    8626:	ff 89 45 f8          	decw   -0x7bb(%bx,%di)
    862a:	8b 45 fc             	mov    -0x4(%di),%ax
    862d:	83 c8 10             	or     $0x10,%ax
    8630:	50                   	push   %ax
    8631:	e8 86 fd             	call   83ba <read_cr4+0xf>
    8634:	ff                   	(bad)  
    8635:	ff 83 c4 04          	incw   0x4c4(%bp,%di)
    8639:	b8 00 a0             	mov    $0xa000,%ax
    863c:	00 00                	add    %al,(%bx,%si)
    863e:	50                   	push   %ax
    863f:	e8 5b fd             	call   839d <write_cr0+0xa>
    8642:	ff                   	(bad)  
    8643:	ff 83 c4 04          	incw   0x4c4(%bp,%di)
    8647:	8b 45 f8             	mov    -0x8(%di),%ax
    864a:	0d 00 00             	or     $0x0,%ax
    864d:	00 80 50 e8          	add    %al,-0x17b0(%bx,%si)
    8651:	3e fd                	ds std 
    8653:	ff                   	(bad)  
    8654:	ff 83 c4 04          	incw   0x4c4(%bp,%di)
    8658:	90                   	nop
    8659:	c9                   	leave  
    865a:	c3                   	ret    

0000865b <load_kernel>:
    865b:	55                   	push   %bp
    865c:	89 e5                	mov    %sp,%bp
    865e:	83 ec 18             	sub    $0x18,%sp
    8661:	68 00 00             	push   $0x0
    8664:	10 00                	adc    %al,(%bx,%si)
    8666:	68 f4 01             	push   $0x1f4
    8669:	00 00                	add    %al,(%bx,%si)
    866b:	6a 64                	push   $0x64
    866d:	e8 56 fd             	call   83c6 <write_cr4+0xa>
    8670:	ff                   	(bad)  
    8671:	ff 83 c4 0c          	incw   0xcc4(%bp,%di)
    8675:	68 00 00             	push   $0x0
    8678:	10 00                	adc    %al,(%bx,%si)
    867a:	e8 76 fe             	call   84f3 <read_disk+0x12b>
    867d:	ff                   	(bad)  
    867e:	ff 83 c4 04          	incw   0x4c4(%bp,%di)
    8682:	89 45 f4             	mov    %ax,-0xc(%di)
    8685:	83 7d f4 00          	cmpw   $0x0,-0xc(%di)
    8689:	75 0a                	jne    8695 <load_kernel+0x3a>
    868b:	6a ff                	push   $0xffff
    868d:	e8 7d ff             	call   860d <reload_elf_file+0x118>
    8690:	ff                   	(bad)  
    8691:	ff 83 c4 04          	incw   0x4c4(%bp,%di)
    8695:	e8 7a ff             	call   8612 <die+0x3>
    8698:	ff                   	(bad)  
    8699:	ff 8b 45 f4          	decw   -0xbbb(%bp,%di)
    869d:	83 ec 0c             	sub    $0xc,%sp
    86a0:	68 00 b0             	push   $0xb000
    86a3:	00 00                	add    %al,(%bx,%si)
    86a5:	ff d0                	call   *%ax
    86a7:	83 c4 10             	add    $0x10,%sp
    86aa:	eb fe                	jmp    86aa <load_kernel+0x4f>
